services:
  web:
    build:
      context: .
      dockerfile: apps/web/Dockerfile.dev
    container_name: baskit-web
    ports:
      - "8080:8080"
    depends_on:
      server:
        condition: service_healthy
    healthcheck:
      test: ["CMD", "wget", "-qO-", "http://localhost:8080/healthz"]
      interval: 5s
      timeout: 2s
      retries: 20
      start_period: 10s

  db:
    # Smallest size, great for simple Node.js services
    image: postgres:16-alpine
    container_name: baskit-db
    restart: always
    environment:
      - POSTGRES_USER=veritoneuser
      - POSTGRES_PASSWORD=veritonepassword
      - POSTGRES_DB=veritonedb
    volumes:
      - pgdata:/var/lib/postgresql/data
    ports:
      - "5432:5432"
    healthcheck:
      # pg_isready is a standard liveness check
      # It's lightweight and reliable
      test: ["CMD-SHELL", "pg_isready -U veritoneuser -d veritonedb"]
      interval: 5s
      timeout: 3s
      retries: 20
      start_period: 10s

  server:
    build:
      context: .
      dockerfile: apps/server/Dockerfile.dev
    container_name: baskit-server
    working_dir: /workspace/apps/server
    # run as non-root
    user: app
    ports:
      - "${PORT:-3001}:3001"
    env_file:
      - .env.development
    # Mount ONLY sources, not the whole repo, and do NOT mount node_modules
    volumes:
      - ./apps/server:/workspace/apps/server
      - ./shared:/workspace/shared
    # Prevents the server from trying to connect before Postgres is listening
    # This removes "ECONNREFUSED" boots
    depends_on:
      db:
        condition: service_healthy
    healthcheck:
      test:
        [
          "CMD",
          "node",
          "-e",
          "const http=require('http');const p=process.env.PORT||3001;http.get('http://localhost:'+p+'/healthz',r=>process.exit(r.statusCode===200?0:1)).on('error',()=>process.exit(1))",
        ]
      interval: 5s
      timeout: 2s
      retries: 20
      start_period: 15s

  migrator:
    # One-shot container: runs Prisma migrations inside Docker, then exits
    build:
      context: .
      dockerfile: apps/server/Dockerfile.dev
    container_name: baskit-migrator
    working_dir: /workspace/apps/server
    user: app
    environment:
      # IMPORTANT: use the service name "db", not localhost
      DATABASE_URL: postgresql://veritoneuser:veritonepassword@db:5432/veritonedb?schema=public
    depends_on:
      db:
        condition: service_healthy
    # Run migrations non-interactively, then stop
    command: ["sh","-lc","npm run -w @app/server prisma:migrate:deploy && npm run -w @app/server prisma:seed"]

    restart: "no"
  studio:
    build:
      context: .
      dockerfile: apps/server/Dockerfile.dev
    container_name: veritone-shopping-list-studio
    working_dir: /workspace/apps/server
    user: app
    env_file:
      - .env.development
    depends_on:
      db:
        condition: service_healthy
    command: ["npx","prisma","studio","--browser","none","--port","5555","--schema","prisma/schema.prisma"]
    ports:
      - "5555:5555"
    volumes:
      - ./apps/server:/workspace/apps/server
      - ./shared:/workspace/shared

volumes:
  pgdata:
