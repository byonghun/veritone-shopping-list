# ---------- Build stage ----------
FROM node:22-alpine3.22 AS builder
WORKDIR /workspace

# Prevent husky hook installation during docker build
ENV HUSKY=0

# Copy manifests first for caching
COPY package.json package-lock.json ./
COPY shared/package.json shared/package.json
COPY apps/web/package.json apps/web/package.json

# Install ONLY needed workspaces (shared + web)
RUN npm ci -w @app/shared -w @app/web --include-workspace-root

# Copy the source
COPY . .

# Build shared first (produces shared/dist used by web)
RUN npm run -w @app/shared clean && npm run -w @app/shared build

# Build the web app
WORKDIR /workspace/apps/web
RUN npm run build

# ---------- Runtime stage ----------
FROM nginxinc/nginx-unprivileged:1.27.4-alpine AS runtime

# Ensure we are root for filesystem operations
USER root

# Replace default nginx site with our config
RUN rm -f /etc/nginx/conf.d/default.conf
COPY apps/web/nginx.conf /etc/nginx/conf.d/web.conf

# Copy built app SPA to nginxâ€™s html dir
COPY --chown=101:101 --from=builder /workspace/apps/web/dist/ /usr/share/nginx/html/

# Drop privileges explicitly (image defaults to 101; being explicit is fine)
USER 101

EXPOSE 8080
CMD ["nginx", "-g", "daemon off;"]
